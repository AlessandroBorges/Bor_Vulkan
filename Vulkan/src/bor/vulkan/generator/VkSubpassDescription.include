// Includes for VkSubpassDescription

//#getPResolveAttachments
  /**
	 * Get method for field pResolveAttachments	[vkstruct_array]<br>
	 * Prototype: const VkAttachmentReference*  pResolveAttachments
	 */ 
	 public VkAttachmentReference[] pResolveAttachments(){
		 long ptr = getPResolveAttachments0(this.ptr);
		 if(ptr == 0L){
		    return null;
		 }
		 if(pResolveAttachmentsBUFFER != null && ptr == pResolveAttachmentsBUFFER.getBufferAddress()){ //same buffer 
		    pResolveAttachmentsBUFFER.update();
		  }else{
		     // wrap native structs 
		     int length = this.colorAttachmentCount();
		     if(length > 0){
		        this.pResolveAttachments = new VkAttachmentReference[length];
		        pResolveAttachmentsBUFFER = new BigBuffer<VkAttachmentReference>(ptr, pResolveAttachments, VkAttachmentReference.getID() );
		     }
		   }
		 return this.pResolveAttachments;
	 }
//#END     